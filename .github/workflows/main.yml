name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: servless-pipeline
  REGION: us-central1

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r serverless-pipeline/src/functions/data_validator/requirements.txt
        pip install -r serverless-pipeline/src/frontend/requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        python -m pytest

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Docker
      run: |
        gcloud auth configure-docker gcr.io

    - name: Build and Push Frontend Image
      run: |
        cd serverless-pipeline/src/frontend
        docker build -t gcr.io/$PROJECT_ID/frontend-service:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/frontend-service:${{ github.sha }}

    - name: Deploy Frontend to Cloud Run
      run: |
        gcloud run deploy frontend-service \
          --image gcr.io/$PROJECT_ID/frontend-service:${{ github.sha }} \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated

    - name: Deploy Cloud Function
      run: |
        cd serverless-pipeline/src/functions/data_validator
        gcloud functions deploy data-validator \
          --runtime python39 \
          --trigger-http \
          --entry-point data_validator \
          --region $REGION \
          --no-gen2 \
          --allow-unauthenticated

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd serverless-pipeline/terraform
        terraform init

    - name: Terraform Plan
      run: |
        cd serverless-pipeline/terraform
        terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd serverless-pipeline/terraform
        terraform apply -auto-approve 