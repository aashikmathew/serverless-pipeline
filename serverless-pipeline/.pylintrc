[MASTER]
# Python version to use for syntax checking
py-version=3.9

# Add any Python module names where names can be shared with global modules
init-hook='import sys; sys.path.append(".")'

# Files or directories to be skipped. They should be base names, not paths
ignore=CVS,.git,__pycache__

# Add files or directories matching the regex patterns to the ignore-list
ignore-patterns=

# Python code to execute
#init-hook=

# Use multiple processes to speed up Pylint (use "0" for auto)
jobs=0

# List of plugins to load
load-plugins=

# Allow loading of arbitrary C extensions
unsafe-load-any-extension=no

[MESSAGES CONTROL]
# Only show warnings with the listed confidence levels
confidence=HIGH,CONTROL_FLOW,INFERENCE,INFERENCE_FAILURE,UNDEFINED

# Disable specific warnings
disable=C0111,  # missing-docstring
        C0103,  # invalid-name
        C0303,  # trailing-whitespace
        W0311,  # bad-indentation
        W0603,  # global-statement
        R0903,  # too-few-public-methods
        R0913,  # too-many-arguments
        R0914,  # too-many-locals
        W0621,  # redefined-outer-name
        W0702,  # bare-except
        W0703,  # broad-except
        R0801   # duplicate-code

[REPORTS]
# Set the output format
output-format=text

# Include a brief explanation of each error
msg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}

# Files with syntax errors are reported first
sort-by-line=yes

[FORMAT]
# Maximum number of characters on a single line
max-line-length=120

# Maximum number of lines in a module
max-module-lines=2000

# String used as indentation unit (default is 4 spaces)
indent-string='    '

[BASIC]
# Regular expression which should only match function or class names
function-rgx=[a-z_][a-z0-9_]{2,50}$
class-rgx=[A-Z_][a-zA-Z0-9_]+$

# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct method names
method-rgx=[a-z_][a-z0-9_]{2,50}$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,50}$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,50}$

# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,50}$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted
good-names=i,j,k,ex,Run,_,id

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=4

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore docstrings when computing similarities
ignore-docstrings=yes

# Ignore imports when computing similarities
ignore-imports=yes

[VARIABLES]
# A regular expression matching the beginning of the name of dummy variables
dummy-variables-rgx=_$|dummy

# List of additional names to consider as builtins
additional-builtins=

[TYPECHECK]
# List of module names for which member attributes should not be checked
ignored-modules=numpy,tensorflow,torch,cv2

# List of classes names for which member attributes should not be checked
ignored-classes=SQLObject

# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members
zope=no

# List of members which are set dynamically and missed by pylint inference system
generated-members=REQUEST,acl_users,aq_parent

[MISCELLANEOUS]
# List of note tags to take into consideration
notes=FIXME,XXX,TODO

[IMPORTS]
# Deprecated modules which should not be used
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the given file
import-graph=

# Create a graph of external dependencies in the given file
ext-import-graph=

# Create a graph of internal dependencies in the given file
int-import-graph= 